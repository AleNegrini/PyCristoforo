from module.com.pycristoforo.geo.shape import generate_random, setup_shape
from module.com.pycristoforo.utils.utils import print_list
from shapely.geometry import Polygon


def get_shape(key: str):
    """
    This method returns the shape (or shapes) as 'Polygon' or 'MultyPoligon' type
    :param key: country ISO2 code/ISO3 code/name/FIPS code
    :return: the shape as Polygon or Multipolygon
    """
    return setup_shape(key)


def get_envelope(shape):
    """
    It returns the envelope built on top the shape passed as input
    :param shape: Polygon or Multipolygon
    :return: shape envelope
    """
    return shape.envelope


def get_random_geoloc(shape, num: int, key: str):
    """
    It generates 'points' (ex. 1, 5, 10, 1000) random latitude-longitude pairs (uniform generated).
    :param shape: shape in which you want to fit your geolocations . Polygon and MultiPolygon are the only shapes accepted
    :param num: how many random latitude-longitude pairs do you want to generate
    :param key: country ISO2 code/ISO3 code/name/FIPS code
    :return: list of features (geojson) containing the random points generated by the method
    """
    return generate_random(shape, num, key)


def main(key: str, num: int):

    shape = setup_shape(key)
    a = generate_random(shape, num, key)

    for s in shape:
        string = str(s.envelope).  \
                replace('POLYGON', '').\
                replace('(', '[').\
                replace(',', '],[').\
                replace(' [[', '[[').\
                replace(' 4', ',4'). \
                replace(' 3', ',3'). \
                replace(' 1', ',1'). \
                replace(' 2', ',2'). \
                replace(' 5', ',5'). \
                replace(' 6', ',6'). \
                replace(' 7', ',7'). \
                replace(' 8', ',8'). \
                replace(' 9', ',9'). \
                replace('[,','[').\
                replace('))', ']]')
        print('{ "type": "Feature","geometry": {"type": "Polygon","coordinates": ['+string+']},"properties": {"prop0": "value0","prop1": {"this": "that"}}},')

    print_list(a)


if __name__ == '__main__':
    italy = get_shape("Italy")
    geo_loc = get_random_geoloc(italy, 10, "Italy")
    env = get_envelope(italy)
    print("End")



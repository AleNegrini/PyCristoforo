from numpy.random import uniform
from shapely.geometry import Point


def generate_random(shape, points: int, country: str):
    """
    It generates 'points' (ex. 1, 5, 10, 1000) random latitude-longitude pairs
    :param shape: shape in which you want to fit your geolocations . Polygon and MultiPolygon are the only shapes accepted
    :param points: how many random latitude-longitude pairs do you want to generate
    :param country: country name
    :return: list of dict (geojson) containing the random points generated by the method
    """

    # get the shape bounds (extreme points)
    bounds = shape.bounds

    # getting min, max lat/lng
    min_lng = bounds[0]
    min_lat = bounds[1]
    max_lng = bounds[2]
    max_lat = bounds[3]

    # supporting variables
    counter = 0
    tot = 0

    # random point generation
    while counter != points:
        tot += 1
        # generate random float between [min_lng, max_lng)
        val1 = uniform(min_lng, max_lng)
        # generate random float between [min_lat, max_lat)
        val2 = uniform(min_lat, max_lat)

        # Point var created
        random_point = Point(val1, val2)

        # checking if the generated point is withing the shape passed as input
        if random_point.within(shape):
            print(
                '{"type": "Feature",'
                '"geometry": '
                '{"type": "Point",'
                '"coordinates": ['+str(val1)+','+str(val2)+
                ']},"properties": {"point": "'
                +str(counter)+'","country": "'+country+'"}},'
            )
            counter += 1
    print(f"Tentative {tot}, fair {counter}. Rate {round((counter/tot)*100,2)}")
